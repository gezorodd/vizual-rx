@use "sass:map";
@import "theme";

html, body {
  height: 100%;
}

body {
  margin: 0;
  font-family: Roboto, "Helvetica Neue", sans-serif;
}

.code {
  font-family: monospace;
  background: #4b4b4b21;
  padding: 0 0.2em;
  border-radius: 0.2em;
  color: #000000d6;
}

a {
  color: map.get($primary, "default");
  font-weight: 500;
  text-decoration: none;
}

@keyframes observer-value-popping {
  0% {
    transform: scale(0);
  }
  50% {
    transform: scale(1.3);
  }
  100% {
    transform: scale(1);
  }
}

@keyframes observable-completed-popping {
  0% {
    opacity: 0;
    transform: scaleY(2) scaleX(6)
  }
  50% {
    opacity: 0.7;
  }
  100% {
    transform: scale(1);
    opacity: 1;
  }
}

@keyframes observable-error-popping {
  0% {
    opacity: 0;
    transform: scale(3);
  }
  75% {
    opacity: 0.7;
  }
  100% {
    transform: scale(1);
    opacity: 1;
  }
}

svg.observer-track, svg.time-track {
  width: 100%;
}

.track-container {
  stroke-linecap: round;

  .scene-container {
    transform: translate(50px, 0);

    .start-line {
      stroke-dasharray: 2 3;
    }
  }

  &.time-track {
    transform: translate(0, 30px);

    .scene-container {
      transform: translate(201px, 0);
    }

    line {
      stroke: $player-time-track-tick-color;
    }

    text {
      fill: $player-component-color;
    }

    .second-thick {
      stroke-width: 2px;
    }
  }

  &.observer-track {
    transform: translate(0, 40px);

    line {
      stroke: $player-observer-track-color;

      &.center-line {
        stroke-opacity: 0.5;
        stroke-dasharray: 5 5;
      }

      &.completed-line {
        stroke-width: 3px;
      }
    }

    text {
      fill: $player-observer-track-color;
    }

    .observer-value {
      animation-name: observer-value-popping;
      animation-duration: 0.7s;

      text {
        font-weight: 500;
      }

      & > *:not(text) {
        fill: white;
        stroke-width: 2px;
        stroke: $player-observer-track-color;
      }

      & > .color-red {
        fill: $player-observer-value-color-red;
      }

      & > .color-green {
        fill: $player-observer-value-color-green;
      }

      & > .color-blue {
        fill: $player-observer-value-color-blue;
      }

      & > .color-yellow {
        fill: $player-observer-value-color-yellow;
      }

      & > .color-orange {
        fill: $player-observer-value-color-orange;
      }

      & > .color-purple {
        fill: $player-observer-value-color-purple;
      }

      & > .color-teal {
        fill: $player-observer-value-color-teal;
      }

      & > .color-indigo {
        fill: $player-observer-value-color-indigo;
      }

      & > .array-symbol {
        stroke: $player-observer-track-color;
        stroke-width: 3px;
        fill: none;
      }
    }

    .completed-line {
      animation-name: observable-completed-popping;
      animation-duration: 0.3s;
      animation-timing-function: ease-in;
    }

    .error-icon {
      animation-name: observable-error-popping;
      animation-duration: 0.3s;
      animation-timing-function: ease-in;
    }
  }

  .no-animation {
    * {
      animation: none !important;
    }
  }

  text {
    cursor: default;
  }
}
