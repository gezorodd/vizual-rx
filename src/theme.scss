@use '../node_modules/@angular/material/index' as mat;

@include mat.core();

$primary: mat.define-palette(mat.$indigo-palette);
$accent: mat.define-palette(mat.$deep-purple-palette);
$theme: mat.define-light-theme(
    (color: (
      primary: $primary,
      accent: $accent,
    ),
      typography: mat.define-typography-config(),
      density: 0)
);

@include mat.all-component-themes($theme);

html {
  --vrx-time-track-color: #{mat.get-theme-color($theme, primary, default-contrast)};
  --vrx-observer-track-color: #{mat.get-theme-color($theme, primary, text)};
  --vrx-observer-value-red-color: #{mat.get-color-from-palette(mat.define-palette(mat.$red-palette))};
  --vrx-observer-value-green-color: #{mat.get-color-from-palette(mat.define-palette(mat.$green-palette))};
  --vrx-observer-value-blue-color: #{mat.get-color-from-palette(mat.define-palette(mat.$blue-palette, 900))};
  --vrx-observer-value-orange-color: #{mat.get-color-from-palette(mat.define-palette(mat.$orange-palette))};
  --vrx-observer-value-yellow-color: #{mat.get-color-from-palette(mat.define-palette(mat.$yellow-palette))};
  --vrx-observer-value-purple-color: #{mat.get-color-from-palette(mat.define-palette(mat.$purple-palette))};
  --vrx-observer-value-cyan-color: #{mat.get-color-from-palette(mat.define-palette(mat.$cyan-palette))};
  --vrx-observer-value-pink-color: #{mat.get-color-from-palette(mat.define-palette(mat.$pink-palette, 200))};
}
